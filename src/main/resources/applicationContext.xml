<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.roger.quartz.." />
	
	<!-- 配置作业明细-->
	<bean id="simpleJob" class="com.roger.quartz.job.SimpleJob"/>
	<!-- 方式一 方法映射类 -->
	<bean id="simpleJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="simpleJob"/>
		<property name="targetMethod" value="run"/>
		<!-- concurrent : false表示等上一个任务执行完后再开启新的任务 -->  
		<property name="concurrent" value="false"/>
	</bean>
	<!-- 方式二 这类具体实现，需要继承QuartzJobBean -->
	<bean id="cronJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.roger.quartz.job.CronJob"/>
		<!--配置耐久性，如果一个任务不是durable，那么当没有Trigger关联它的时候，它就会被自动删除-->
		<property name="durability" value="true"/>
	</bean>
	
	<!-- 配置触发器 -->
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="simpleJobDetail"/>
		<!-- 延迟3秒执行 -->
		<property name="startDelay" value="3000"/>
		<!-- 每隔10秒执行一次 -->
		<property name="repeatInterval" value="10000"/>
	</bean>
	
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cronJobDetail"/>
		<!-- 每隔5秒执行一次 -->
		<property name="cronExpression" value="*/5 * * * * ?"/>
	</bean>
	
	<!-- 配置任务调度 -->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger"/>
				<ref bean="cronTrigger"/>
			</list>
		</property>
	</bean>
</beans>
